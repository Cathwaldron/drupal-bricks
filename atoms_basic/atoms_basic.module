<?php
/**
 * @file
 * Code for the Atoms Basic feature.
 */

include_once 'atoms_basic.features.inc';

/**
 * Implements hook_theme_registry_alter() as described here: https://www.drupal.org/node/715160.
 */
function atoms_basic_theme_registry_alter(&$theme_registry) {
  $theme_registry_copy = $theme_registry;
  $module_path = drupal_get_path('module', 'atoms_basic');
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'atoms_basic', $module_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  // A list of templates the module will provide templates for
  $hooks = array('entity');
  foreach ($hooks as $hook) {
    // Add the key 'theme paths' if it doesn't exist in this theme's registry
    if (!isset($theme_registry[$hook]['theme paths'])) {
      $theme_registry[$hook]['theme paths'] = array();
    }
    // Shift this module's directory to the top of the theme path list
    if (is_array($theme_registry[$hook]['theme paths'])) {
      $first_element = array_shift($theme_registry[$hook]['theme paths']);
      if ($first_element) {
        array_unshift($theme_registry[$hook]['theme paths'], $first_element, $module_path);
      }
      else {
        array_unshift($theme_registry[$hook]['theme paths'], $module_path);
      }
    }
  }
}

/**
 * Preprocesses variables for entity.tpl.php.
 */
function atoms_basic_preprocess_entity(&$vars) {
  $element = $vars['elements'];
  if ($element['#entity_type'] == 'atom') {
    if (!empty($element['field_bg']) && $element['field_bg']['#field_type'] == 'image') {
      $img = file_create_url($element['field_bg']['#items'][0]['uri']);
      $vars['attributes_array']['style'] = sprintf('background-image: url(%s)', $img);
    }
  }
}
